"""Base agent class for vulnerability assessment agents.

This module provides the base class for all vulnerability assessment agents.
"""

from typing import Optional, Any

from ..utils.config import get_config, Config
from ..utils.logging import get_logger
from ..core.openai_client import get_openai_client, OpenAIClient

logger = get_logger(__name__)


class BaseVulnerabilityAgent:
    """Base class for all vulnerability assessment agents."""

    def __init__(
        self,
        name: str,
        description: str,
        config_key: str,
    ) -> None:
        """Initialize a vulnerability agent.

        Args:
            name: Name of the agent
            description: Description of the agent's purpose
            config_key: Configuration key for this agent
        """
        self.name = name
        self.description = description
        self.config_key = config_key
        self.config: Config = get_config()
        self.openai_client: OpenAIClient = get_openai_client()

    async def process_event(self, event: Any) -> None:
        """Process an incoming event.

        Args:
            event: The event to process
        """
        pass
