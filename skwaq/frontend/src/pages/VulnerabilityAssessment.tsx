import React, { useState } from 'react';
import '../styles/VulnerabilityAssessment.css';

const VulnerabilityAssessment: React.FC = () => {
  const [activeTab, setActiveTab] = useState('guided');
  const [chatInput, setChatInput] = useState('');
  
  // Mock chat messages for demo
  const [chatMessages, setChatMessages] = useState([
    { id: 1, role: 'system', content: 'Welcome to the Vulnerability Assessment Copilot. How can I assist you today?' },
    { id: 2, role: 'user', content: 'Can you explain what SQL injection is?' },
    { id: 3, role: 'system', content: 'SQL Injection is a code injection technique that exploits a security vulnerability in an application\'s software. The vulnerability happens when user input is incorrectly filtered and directly used as part of an SQL query.\n\nAttackers can insert malicious SQL statements into entry fields, which can then be executed by the database. This can lead to unauthorized access, data theft, or data manipulation.' },
  ]);
  
  const handleSendMessage = (e: React.FormEvent) => {
    e.preventDefault();
    if (!chatInput.trim()) return;
    
    // Add user message
    const newUserMessage = { id: Date.now(), role: 'user', content: chatInput };
    setChatMessages([...chatMessages, newUserMessage]);
    
    // Clear input
    setChatInput('');
    
    // Simulate system response
    setTimeout(() => {
      const systemResponse = { 
        id: Date.now() + 1, 
        role: 'system', 
        content: 'I\'ve noted your question. To properly analyze SQL injection vulnerabilities in your codebase, I would need to analyze your repository. Would you like to start an assessment focusing on injection vulnerabilities?' 
      };
      setChatMessages(prevMessages => [...prevMessages, systemResponse]);
    }, 1000);
  };
  
  return (
    <div className="vulnerability-assessment-container">
      <h1 className="page-title">Vulnerability Assessment</h1>
      
      <div className="assessment-tabs">
        <button 
          className={`tab-button ${activeTab === 'guided' ? 'active' : ''}`}
          onClick={() => setActiveTab('guided')}
        >
          Guided Assessment
        </button>
        <button 
          className={`tab-button ${activeTab === 'chat' ? 'active' : ''}`}
          onClick={() => setActiveTab('chat')}
        >
          Chat Interface
        </button>
        <button 
          className={`tab-button ${activeTab === 'workflows' ? 'active' : ''}`}
          onClick={() => setActiveTab('workflows')}
        >
          Workflows
        </button>
      </div>
      
      <div className="assessment-content">
        {activeTab === 'guided' && (
          <div className="guided-assessment">
            <div className="guided-intro">
              <h2>Guided Vulnerability Assessment</h2>
              <p>Follow a step-by-step process to identify vulnerabilities in your codebase.</p>
            </div>
            
            <div className="guided-steps">
              <div className="step active">
                <div className="step-number">1</div>
                <div className="step-content">
                  <h3>Select Repository</h3>
                  <p>Choose a repository to assess for vulnerabilities.</p>
                  <select className="repository-select">
                    <option value="">Select a repository</option>
                    <option value="repo1">example/vuln-repo</option>
                    <option value="repo2">example/secure-app</option>
                    <option value="repo3">example/legacy-code</option>
                  </select>
                </div>
              </div>
              
              <div className="step">
                <div className="step-number">2</div>
                <div className="step-content">
                  <h3>Threat Model</h3>
                  <p>Define the scope and threat model for your assessment.</p>
                </div>
              </div>
              
              <div className="step">
                <div className="step-number">3</div>
                <div className="step-content">
                  <h3>Vulnerability Discovery</h3>
                  <p>Run automated and AI-assisted vulnerability detection.</p>
                </div>
              </div>
              
              <div className="step">
                <div className="step-number">4</div>
                <div className="step-content">
                  <h3>Verification</h3>
                  <p>Verify and validate detected vulnerabilities.</p>
                </div>
              </div>
              
              <div className="step">
                <div className="step-number">5</div>
                <div className="step-content">
                  <h3>Remediation</h3>
                  <p>Get recommendations for fixing identified vulnerabilities.</p>
                </div>
              </div>
            </div>
            
            <div className="guided-actions">
              <button className="next-step-button">Next Step</button>
            </div>
          </div>
        )}
        
        {activeTab === 'chat' && (
          <div className="chat-interface">
            <div className="chat-messages">
              {chatMessages.map(message => (
                <div key={message.id} className={`chat-message ${message.role}`}>
                  <div className="message-content">{message.content}</div>
                </div>
              ))}
            </div>
            
            <form className="chat-input-form" onSubmit={handleSendMessage}>
              <input 
                type="text" 
                className="chat-input"
                placeholder="Ask about vulnerabilities or start an assessment..."
                value={chatInput}
                onChange={(e) => setChatInput(e.target.value)}
              />
              <button type="submit" className="send-button">Send</button>
            </form>
          </div>
        )}
        
        {activeTab === 'workflows' && (
          <div className="assessment-workflows">
            <h2>Assessment Workflows</h2>
            <p className="workflow-intro">Choose a specialized workflow to assess your codebase.</p>
            
            <div className="workflow-cards">
              <div className="workflow-card">
                <div className="workflow-header">
                  <h3>OWASP Top 10</h3>
                  <span className="workflow-badge">Popular</span>
                </div>
                <p className="workflow-description">
                  Scan for vulnerabilities based on the OWASP Top 10 Web Application Security Risks.
                </p>
                <button className="start-workflow-button">Start Workflow</button>
              </div>
              
              <div className="workflow-card">
                <div className="workflow-header">
                  <h3>API Security</h3>
                </div>
                <p className="workflow-description">
                  Focused assessment of API security vulnerabilities and best practices.
                </p>
                <button className="start-workflow-button">Start Workflow</button>
              </div>
              
              <div className="workflow-card">
                <div className="workflow-header">
                  <h3>Authentication & Authorization</h3>
                </div>
                <p className="workflow-description">
                  Analyze authentication mechanisms and authorization controls.
                </p>
                <button className="start-workflow-button">Start Workflow</button>
              </div>
              
              <div className="workflow-card">
                <div className="workflow-header">
                  <h3>Data Protection</h3>
                </div>
                <p className="workflow-description">
                  Evaluation of sensitive data handling and encryption practices.
                </p>
                <button className="start-workflow-button">Start Workflow</button>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default VulnerabilityAssessment;