[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "skwaq"
version = "0.1.0"
description = "Vulnerability Assessment Copilot - A multiagent AI system for aiding in vulnerability discovery"
authors = ["Microsoft Security Team"]
readme = "README.md"
packages = [{include = "skwaq"}]

[tool.poetry.dependencies]
python = "^3.10"
rich = "^13.7.0"
neo4j = "^5.19.0"
autogen = "^0.2.21"
pydantic = "^2.6.3"
typer = "^0.9.0"
protobuf = "^4.25.3"
grpcio = "^1.60.0"
grpcio-tools = "^1.60.0"
openai = "^1.13.3"
azure-identity = "^1.15.0"
azure-keyvault-secrets = "^4.7.0"
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
flake8 = "^6.1.0"
mypy = "^1.5.1"
pre-commit = "^3.3.3"
sphinx = "^7.2.6"
sphinx-rtd-theme = "^1.3.0"
pydocstyle = "^6.3.0"
docstr-coverage = "^2.3.0"

[tool.poetry.scripts]
skwaq = "skwaq.cli.main:app"

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"

[tool.pydocstyle]
convention = "google"
match = "(?!test_).*\\.py"
